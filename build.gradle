buildscript {
	repositories {
		mavenCentral()
        jcenter()
	}

    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}

plugins {
  id "com.moowork.node" version "1.2.0"
  id "org.springframework.boot" version "2.1.0.RELEASE"
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'idea'

group = 'com.omni'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.10

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jsoup:jsoup:1.11.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

node {
  version = '8.11.3'
  npmVersion = '5.6.0'
  download = true
  workDir = file("${project.buildDir}")
  nodeModulesDir = file("${project.projectDir}")
}

bootJar {
    mainClassName = 'com.omni.omni.OmniApplication'
}

processResources {
  with copySpec {
      from "${buildDir}/fe"
      include "**/*.html"
      into "templates"
  }

  with copySpec {
    from "${buildDir}/fe"
    include "**/*.js", "**/*.css"
    into "static"
  }
}

task webpack(type: NodeTask, dependsOn: 'npmInstall') {
    def osName = System.getProperty("os.name").toLowerCase();
    if (osName.contains("windows")) {
        script = project.file('node_modules/webpack/bin/webpack.js')
    } else {
        script = project.file('node_modules/.bin/webpack')
    }
}

processResources.dependsOn 'webpack'

clean.delete << file('${buildDir}/build/fe')